#!/data/data/com.termux/files/usr/bin/bash
spinner() {
        pid=$!
        spin='\|/-'
        i=0
        tput civis
        while kill -0 $pid 2>/dev/null
	do
                i=$(( (i+1) %4 ))
                printf "\r${cyan1}[${spin:$i:1}]${nc} ${cyan1} ${launch}"
                sleep .1
	done
        clear
        printf "\r\n${green}[✔]${nc} ${green} ${splashdown}";echo
        tput cnorm
}
hup=`pwd`
#colors
#colors
white="\033[1;37m"                                          ##
grey="\033[0;37m"                                           ##
purple="\033[1;35m"                                         ##
red="\033[1;31m"                                            ##
green="\033[1;32m"                                          ##
yellow="\033[1;33m"                                         ##
purple="\033[0;35m"                                         ##
cyan="\033[0;36m"                                           ##
cyan1="\033[1;36m"                                          ##
cafe="\033[0;33m"                                           ##
fiuscha="\033[0;35m"                                        ##
blue="\033[1;34m"                                           ##
l_red="\033[1;37;41m"                                       ##
nc="\033[0m"                                                ## 
arch=`uname -m`
ArNam=$(dpkg --print-architecture)
#spinner
Spiner() {
progreSh() {
    LR='\033[1;31m'
    LG='\033[1;32m'
    LY='\033[1;33m'
    LC='\033[1;36m'
    LW='\033[1;37m'
    NC='\033[0m'
    if [ "${1}" = "0" ]; then TME=$(date +"%s"); fi
    SEC=`printf "%04d\n" $(($(date +"%s")-${TME}))`; SEC="$SEC sec"
    PRC=`printf "%.0f" ${1}`
    SHW=`printf "%3d\n" ${PRC}`
    LNE=`printf "%.0f" $((${PRC}/2))`
    LRR=`printf "%.0f" $((${PRC}/2-12))`; if [ ${LRR} -le 0 ]; then LRR=0; fi;
    LYY=`printf "%.0f" $((${PRC}/2-24))`; if [ ${LYY} -le 0 ]; then LYY=0; fi;
    LCC=`printf "%.0f" $((${PRC}/2-36))`; if [ ${LCC} -le 0 ]; then LCC=0; fi;
    LGG=`printf "%.0f" $((${PRC}/2-48))`; if [ ${LGG} -le 0 ]; then LGG=0; fi;
    LRR_=""
    LYY_=""
    LCC_=""
    LGG_=""
    for ((i=1;i<=13;i++))
    do
    	DOTS=""; for ((ii=${i};ii<13;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LRR_="${LRR_}█"; else LRR_="${LRR_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${DOTS}${LY}............${LC}............${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 1 ]; then sleep .025; fi
    done
    for ((i=14;i<=25;i++))
    do
    	DOTS=""; for ((ii=${i};ii<25;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LYY_="${LYY_}█"; else LYY_="${LYY_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${DOTS}${LC}............${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 14 ]; then sleep .030; fi
    done
    for ((i=26;i<=37;i++))
    do
    	DOTS=""; for ((ii=${i};ii<37;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LCC_="${LCC_}█"; else LCC_="${LCC_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${LC}${LCC_}${DOTS}${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 26 ]; then sleep .025; fi
    done
    for ((i=38;i<=49;i++))
    do
    	DOTS=""; for ((ii=${i};ii<49;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LGG_="${LGG_}█"; else LGG_="${LGG_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${LC}${LCC_}${LG}${LGG_}${DOTS} ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 38 ]; then sleep .025; fi
    done
}

printf "\n\n\n\n\n\n\n\n\n\n"
progreSh 0
progreSh 10
progreSh 20
progreSh 30
progreSh 40
progreSh 50
progreSh 70
progreSh 100
printf "\n\n\n\n\n\n\n\n\n\n"
}
point() {
echo -e '\e[31m

███████╗ ██████╗ ███╗   ██╗████████╗██████╗ ██╗  ██╗
██╔════╝██╔═══██╗████╗  ██║╚══██╔══╝╚════██╗██║  ██║
█████╗  ██║   ██║██╔██╗ ██║   ██║    █████╔╝███████║
██╔══╝  ██║   ██║██║╚██╗██║   ██║   ██╔═══╝ ██╔══██║
██║     ╚██████╔╝██║ ╚████║   ██║   ███████╗██║  ██║
╚═╝      ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝

                         \e[32m(\e[36mGITHUB :- \e[35mHK4CRPRASAD \e[m\e[32m)\e[m
                          \e[34mMADE BY HK4CRPRASAD

\e[m'
cd $hup
read -p $'\e[32m>> ENTER FILE HERE:\e[m ' n
read -p $'\e[35m>> OUTPUT NAME:\e[m ' p
tput civis
echo -e "\e[32m[\e[33m01\e[32m]\e[36mFOR COMPRESS C "
echo -e "\e[32m[\e[33m02\e[32m]\e[36mFOR NO COMPRESS C (IMGUI BETTER RESPONSE) "
printf "\n"
read -p $'\e[35m>> 𝑺𝒆𝒍𝒆𝒄𝒕 𝒀𝒐𝒖𝒓 𝑶𝒑𝒕𝒊𝒐𝒏:\e[m ' h
printf "\n\n\n"
if [ $h = 1 ] || [ $h = 01 ]
then
spinner
Spiner
spinner
font2c $n PIRO >> $p
clear
point
elif [ $h = 2 ] || [ $h = 02 ]
then
spinner
Spiner
spinner
font2c -nocompress $n PIRO >> $p
clear
point
fi
}
point
